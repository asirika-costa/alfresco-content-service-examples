var notifyDays=5;function getOwnerOrCreatorEmail(b){if(b.properties["cm:owner"]){var a=b.properties["cm:owner"]}else{var a=b.properties["cm:creator"]}if(logger.debugLoggingEnabled){logger.debug("******* getOwnerOrCreatorEmail assignee: "+a)}if(a.toLowerCase()=="system"){logger.error("getOwnerOrCreatorEmail cannot send email to System user");return null}else{return people.getPerson(a).properties["cm:email"]}}function sendMail(g){var f=getOwnerOrCreatorEmail(g);if(f!=null){var b=actions.create("mail");b.parameters.to=f;b.parameters.subject="Content Expiry Notification";b.parameters.from="admin@alfresco.com";var c=search.selectNodes("/app:company_home/app:dictionary/app:email_templates/app:notify_email_templates/cm:custom_notify_user_email.html.ftl")[0];if(c){b.parameters.template=c;var a=new Array();a.notifyDays=notifyDays;var e=new Array();e.args=a;b.parameters.template_model=e}else{logger.warn("Failed to find email template /Company Home/Email Templates/Notify Email Templates/custom_notify_user_email.html.ftl message sent as plain text");b.parameters.text="Content is due to expire in "+notifyDays+" days, please review and update expiry date"}b.execute(g);if(logger.debugLoggingEnabled){logger.debug("**** Sending notification email to: "+f)}}else{logger.error("Cannot send email to user null")}}function getDueToExpire(){if(logger.debugLoggingEnabled){logger.debug("Executing scheduled-script-action: getDueToExpire")}try{var a=jmx.queryMBeans("Alfresco:Name=GlobalProperties");var l=a[0].attributes["custom-scheduled-script.expire.notification.days"].value}catch(g){logger.warn("custom-scheduled-script.expire.notification.days property not found, using default "+notifyDays+" days")}if(l!=null){notifyDays=l}var j=new Date();var f=j;f.setDate(f.getDate()+parseInt(notifyDays));var e=f.getFullYear()+"-"+(f.getMonth()+1)+"-"+f.getDate()+"T00:00:00.000Z";var k=f.getFullYear()+"-"+(f.getMonth()+1)+"-"+f.getDate()+"T23:59:59.999Z";if(logger.debugLoggingEnabled){logger.debug("Logger effectiveToStartDate: "+e);logger.debug("Logger effectiveToEndDate: "+k)}var b={maxItems:1000,skipCount:0};var i="SELECT D.*, E.* FROM cmis:document AS D JOIN cm:effectivity AS E ON D.cmis:objectId = E.cmis:objectId WHERE E.cm:to > TIMESTAMP '"+e+"' AND E.cm:to < TIMESTAMP '"+k+"'";if(logger.debugLoggingEnabled){logger.debug("Query: "+i)}var c={query:i,language:"db-cmis",page:b};var h=search.query(c);foreach(var d in h){if(logger.debugLoggingEnabled){logger.debug("Due to expire in "+notifyDays+" days from now: "+d.name+" Expires: "+d.properties["cm:to"]);try{if(d.properties["sch:notifyOwner"]!=true){sendMail(d);d.properties["sch:notifyOwner"]=true;d.save()}}catch(g){logger.error("Failed to apply sch:declareRecord property to node: "+d.nodeRef);logger.error(g)}}}}function getExpired(){if(logger.debugLoggingEnabled){logger.debug("Executing scheduled-script-action: getExpired")}var h=new Date();var e=h;var d=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+"T23:59:59.999Z";if(logger.debugLoggingEnabled){logger.debug("Logger effectiveToStartDate: "+d)}var a={maxItems:1000,skipCount:0};var i="SELECT D.*, E.* FROM cmis:document AS D JOIN cm:effectivity AS E ON D.cmis:objectId = E.cmis:objectId WHERE E.cm:to <= TIMESTAMP '"+d+"'";if(logger.debugLoggingEnabled){logger.debug("Query: "+i)}var b={query:i,language:"db-cmis",page:a};var g=search.query(b);foreach(var c in g){if(logger.debugLoggingEnabled){logger.debug("Expired: "+c.name+" Expired: "+c.properties["cm:to"]);try{c.properties["sch:declareRecord"]=true;c.save()}catch(f){logger.error("Failed to apply sch:declareRecord property to node: "+c.nodeRef)}}}}getDueToExpire();getExpired();